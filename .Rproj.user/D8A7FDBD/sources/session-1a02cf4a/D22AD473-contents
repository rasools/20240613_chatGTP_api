---
title: "chatGTP API: Example 2"
format: html
editor: visual
---

```{r}
library(httr)
library(jsonlite)
library(readxl)
library(knitr)
library(kableExtra)
```

Read the genes and create prompts for chatGTP:

```{r}
chatGPT <- function(prompt, apiKey, modelName = "gpt-3.5-turbo", temperature = 1) {
  response <- POST(
    url = "https://api.openai.com/v1/chat/completions",
    add_headers(Authorization = paste("Bearer", apiKey)),
    content_type_json(),
    encode = "json",
    body = list(
      model = modelName,
      temperature = temperature,
      messages = list(list(role = "user", content = prompt))
    )
  )
  stop_for_status(response)
  trimws(content(response)$choices[[1]]$message$content)
}

path <- "genes.xlsx"
genes <- read_excel(path, col_names = TRUE)
genes_list <- as.character(genes[[1]])  

results <- list()

for (gene in genes_list) {
  prompt <- paste("What are the reported knockout cells for the gene", gene, "and the titles of the publications?")
  response <- chatGPT(prompt, Sys.getenv("OPENAI_API_KEY_NBIS"))
  results[[gene]] <- response
}
```

Print the results table:

```{r}
df <- data.frame(Gene = character(), Response = character(), stringsAsFactors = FALSE)

for (gene in genes_list) {
  df <- rbind(df, data.frame(Gene = gene, Response = results[[gene]], stringsAsFactors = FALSE))
}

kable(df, escape = FALSE) %>%
  kable_styling(bootstrap_options = c("striped", "hover", "condensed", "responsive"))
```
